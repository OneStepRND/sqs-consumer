name: Test and Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Run tests
      run: ./test.sh

  build-wheel:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Build universal wheel
      run: |
        uv build --wheel

    - name: Upload wheel
      uses: actions/upload-artifact@v4
      if: github.ref == 'refs/heads/main'
      with:
        name: wheel
        path: dist/*.whl



  create-release:
    needs: build-wheel
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Determine version
      id: version
      run: |
        VERSION=$(grep -Po 'version = "\K[^"]+' pyproject.toml)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Check if tag exists
      id: check_tag
      run: |
        if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist/
        pattern: wheel
        merge-multiple: true

    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: steps.check_tag.outputs.exists == 'false'
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Release v${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: dist/*.whl